syntax = "proto3";

package croad;

message Line {
  double x0 = 1;
  double y0 = 2;
  double x1 = 3;
  double y1 = 4;
}

message Point {
  double x = 1;
  double y = 2;
}

message Obstacle {
  double l = 1;     // left
  double t = 2;     // top
  double r = 3;     // right
  double b = 4;     // bottom
  string label = 5; // type
  double confidence = 6;
}

message LineDetection {
  // (0, 0) is the top-left corner. Axis x is horizontal and y is vertical.
  repeated Line lines = 1;

  // Image width and height
  int32 width = 2;
  int32 height = 3;

  repeated Obstacle obstacles = 4;
}

message ColorMapping {
  string fromHex = 1;
  string toHex = 2;
}

message LineRequest {
  string video_path = 1;
  int32 frame_index = 2;
  string image_path = 3;

  repeated ColorMapping color_mappings = 4;

  // If set, we'll use the keras model to predict lines.
  string model_path = 5;
}

message PlotRequest {
  repeated Line lines = 1;
  string line_color = 2;

  repeated Point points = 3;
  string point_color = 4;
}

message Empty {}

service LineDetector {
  rpc DetectLines(LineRequest) returns (LineDetection);
  rpc Plot(PlotRequest) returns (Empty);
  rpc ExportPng(Empty) returns (Empty);
  rpc ResetPlot(Empty) returns (Empty);
}

message SegmentRequest {
  // Video path + frame index overrides image path
  string video_path = 1;
  int32 frame_index = 2;

  string image_path = 3; // Input image (if video path isn't provided)
  string output_path = 4;
}

service Segmenter {
  rpc Segment(SegmentRequest) returns (Empty);
}
